<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright Â© 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

function eyeControl_on_userconfig_methodSelect ($params = '') {
	$switch = $params[arg0][0];
	$xmlfile = EYE_ROOT .'/'. SYSTEM_DIR .'/' . SYSTEM_CONF_DIR . '/userconfig/'. $switch .'.xml';
	$xml = eyeXML('getXMLfile', array($xmlfile));
	$GLOBALS['eyeControl_userconfig_hidden_xml']->setText($xmlfile);
	
	if ($switch == CONFIG_MODULE) {
		$GLOBALS['eyeControl_userconfig_button_switch']->disable();
	} else if ($GLOBALS['eyeControl_userconfig_button_switch']->enabled === 0) {
		$GLOBALS['eyeControl_userconfig_button_switch']->enable();
	} 
	$GLOBALS['eyeControl_userconfig_label_description']->setText($xml['eyeConfig_module'][0]['description'][0]);
	
	$GLOBALS['eyeControl_userconfig_table_params']->delAllRows();
	if (isset($xml['eyeConfig_module'][0]['constant'])) {
		foreach($xml['eyeConfig_module'][0]['constant'] as $setting) {
			$GLOBALS['eyeControl_userconfig_table_params']->addRow(array($setting['name'][0], $setting['ui_name'][0], $setting['value'][0], $setting['default'][0]));
		}
	} else {
		// I would disable the button, but image button doesn't support that (at the moment)
	}
}

function eyeControl_on_userconfig_paramEdit ($params = '') {
	$sel = $GLOBALS['eyeControl_userconfig_table_params']->selected;
	if ($sel == '') {
		eyeX('messageBox', array('content' => "Please select an option from the table."));
		return;
	}
	
	$xmlfile = $GLOBALS['eyeControl_userconfig_hidden_xml']->text;
	$xml = eyeXML('getXMLfile', array($xmlfile));
	
	foreach($xml['eyeConfig_module'][0]['constant'] as $setting) {
		if ($setting['name'][0] == $sel) {
			eyex('messageBox',array(
				'buttons' => array(array('userconfig_paramEdit_save','Save'), array('userconfig_dialog_cancel','Cancel')),
				'content' => '%s',
				'father' => 'eyeControl_container_big',
				'img' => 'index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/48x48/rename.png',
				'textbox_event' => 'userconfig_paramEdit_save',
				'textbox_name' => 'eyeControl_userconfig_textbox_param_newValue',
				'textbox_text' => $setting['value'][0],
				'title' => 'Edit Value',
				'tokens' => array($setting['ui_name'][0]),
				'type' => 3,
				'win_name' => 'eyeControl_userconfig_dialog',
				'win_removepid' => 0,
				'win_style' => TITLE + CLOSE
			));
			break;
		}
	}
}

function eyeControl_on_userconfig_paramEdit_save ($params = '') {
	$sel = $GLOBALS['eyeControl_userconfig_table_params']->selected;
	$val = $params['eyeControl_userconfig_textbox_param_newValue'][0];
	$xmlfile = $GLOBALS['eyeControl_userconfig_hidden_xml']->text;
	$xml = eyeXML('getXMLfile', array($xmlfile));
	
	for ($s = 0; $s<count($xml['eyeConfig_module'][0]['constant']); $s++) {
		if ($xml['eyeConfig_module'][0]['constant'][$s]['name'][0] == $sel) {
			if (isset($xml['eyeConfig_module'][0]['constant'][$s]['password'])) {
				$val = base64_encode(bin2hex($val));
			}
			$xml['eyeConfig_module'][0]['constant'][$s]['value'][0] = $val;
			break;
		}
	}
	
	$GLOBALS['eyeControl_userconfig_dialog']->close();
	eyeXML('setXMLfile', array($xmlfile, $xml));
	
	$val = $GLOBALS['eyeControl_userconfig_select_method']->selected;
	eyeX('messageBox', array('content' => "New Parameter Value Saved"));
	eyeControl_on_userconfig_methodSelect(array('arg0' => array(0 => $val)));
}

function eyeControl_on_userconfig_dialog_cancel ($params = '') {
	$GLOBALS['eyeControl_userconfig_dialog']->close();
}

function eyeControl_on_userconfig_switchMethod_submit ($params = '') {
	if (!is_array($params) || !isset($params["from"]) || !isset($params["to"])) {
		errorCodes('setErrorCode', array(INCORRECT_PARAMS));
		return false;
	}
	
	$args = array($params['from'][0], $params['to'][0], $GLOBALS['checknum']);
	$ret = eyeConfig('swap', $args);
	
	if ($GLOBALS['eyeControl_userconfig_dialog']) {
		$GLOBALS['eyeControl_userconfig_dialog']->close();
		$GLOBALS['eyeControl_userconfig_button_switch']->disable();
	}
}

function eyeControl_on_userconfig_switchMethod ($params = '') {
	
//	error_log(print_r($params, true), 0);
	
	$sel = $GLOBALS['eyeControl_userconfig_select_method']->selected;
	if ($sel == CONFIG_MODULE) {
		eyex('messageBox',array('content' => 'This is the current method. You cannot change to it.'));
		return true;
	}
	
	// TO-DO:
	// - Check there are no (other) users attempting to access oneye whilst we do this, and bring up a messagebox if there are.
	// - - Is it even currently possible to get a list of users logged in?
	// - - We could get oneye to maintain a central xml file that's updated everytime someone logs in or out. Has its flaws, though.
	
	eyex('messageBox',array(
		'buttons' => array(array('userconfig_switchMethod_submit','Yes'), array('userconfig_dialog_cancel','Cancel')),
		'content' => 'You are about to switch from %s to %s. Are you sure you want to do this?',
		'tokens' => array(strtoupper(CONFIG_MODULE), strtoupper($sel)),
		'father' => 'eyeControl_container_big',
		'img' => '?',
		'hiddens' => array(array("from", CONFIG_MODULE), array("to", $sel)),
		'title' => 'Confirm Change',
		'type' => 3,
		'win_name' => 'eyeControl_userconfig_dialog',
		'win_removepid' => 0,
		'win_style' => TITLE,
	));
	
//	eyeControl_on_userconfig_switchMethod_submit(array(CONFIG_MODULE, $sel));
	
/*		*/
}

?>