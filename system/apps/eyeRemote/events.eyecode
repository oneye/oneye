<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright Â© 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

function eyeRemote_on_Close($params = ''){
	proc('end');
}

function eyeRemote_on_Do($params = '') {
	global $checknum,$myPid;
	/*
	if (is_object($GLOBALS['eyeRemote_Textbox']))
	{
		$url = 'https://gamek.vn/';  // $GLOBALS['eyeRemote_Textbox']->text;
		$GLOBALS['eyeRemote_Window']->close();
	}
	else
	{
		$url = $params[0];
		$title = 'eyeRemote';
	}
	*/
	$url = 'https://gamek.vn/';
    $GLOBALS['eyeRemote_Window']->close();
	if ((strtolower(substr($url, 0, 6)) !== 'ftp://')
	&& (strtolower(substr($url, 0, 7))  !== 'http://')
	&& (strtolower(substr($url, 0, 8))  !== 'https://'))
	{ // utf8
		$file = basename($url);
		$path = eyeFiles('cleanPath', array(substr(trim($url, '/\\'), 0, -strlen($file)))); // utf8
		if (vfs('fileExists',array($path[0] . '/' . $file)) || $path[1] == 'real' && vfs('real_fileExists',array($path[0] . '/' . $file)))
		{
			$myHidden = new Hidden(array(
				'father' => 'eyeRemote_Window_Content',
				'name' => 'eyeRemote_Hidden',
				'text' => $path[1] . '://' . $path[2] . '/' . $file
			));
			$myHidden->show();
			$title = $file . ' - eyeRemote';
			$url = 'index.php?checknum=' . $checknum . '&msg=getFile';
		}
	}
	
	if (!empty($params[1])) {
		$window_title = $params[1];
	} else {
		$window_title = $title;
	}
	if (!empty($params[2])) {
		$window_width = $params[2];
	} else {
		$window_width = $_SESSION['SCREEN']['eyeApps']['width']*0.75;
	}
	if (!empty($params[3])) {
		$window_height = $params[3];
	} else {
		$window_height = $_SESSION['SCREEN']['eyeApps']['height']*0.75;
	}
	if (isset($params[4]) && $params[4] == 1) {
		$start_maximized = TRUE;
	} else {
		$start_maximized = FALSE;
	}
	
	$myWindow = new Window(array(
		'cent' => 1,
		'father' => 'eyeApps',
		'height' => $window_height,
		'name' => 'eyeRemote_Window',
		'savePosition' => RELATIVE,
		'sendResizeMsg' => 1,
		'sigResize' => 'Resize',
		'title' => $window_title,
		'width' => $window_width
	));
	$myWindow->show();
	if (!empty($params[3])) {
		$myWindow->setHeight($window_height);
	}
	if (!empty($params[2])) {
		$myWindow->setWidth($window_width);
	}
	if ($start_maximized == TRUE) {
		eyex('runjs', array('js' => "Windows.Maximize('".$myPid."_".$myWindow->name."');"));
	}
	
	$myIframe = new Iframe(array(
		'father' => 'eyeRemote_Window_Content',
		'name' => 'eyeRemote_Iframe',
		'height' => $myWindow->height - 24,
		'url' => $url,
		'width' => $myWindow->width - 3,
		'x' => 0,
		'y' => 0
	));
	$myIframe->show();
	$myIframe->focus();
}

function eyeRemote_on_getFile($params = '') {
	$url = $GLOBALS['eyeRemote_Hidden']->text;
	$file = basename($url);
	$path = eyeFiles('cleanPath', array(substr(trim($url, '/\\'), 0, -strlen($file)))); // utf8
	if (strtolower(substr($file, -4)) == '.swf') { // utf8
		header('Content-type: application/x-shockwave-flash');
	}
	if ($path[1] == 'real') {
		header('Content-Length: ' . vfs('real_filesize',array($path[0] . '/' . $file)));
	} else {
		header('Content-Length: ' . vfs('filesize',array($path[0] . '/' . $file)));
	}
	header('Accept-Ranges: bytes');
	if ($path[1] == 'real') {
		vfs('printFile',array($path[0] . '/' . $file));
	} else {
		vfs('readFile',array($path[0] . '/' . $file));
	}
	exit;
}

function eyeRemote_on_Message($params = '') {
	eyeWidgets('updateContent',$params);
}

function eyeRemote_on_Resize($params = '') {
	$GLOBALS['eyeRemote_Window']->width = intval($params['arg'][0]);
	$GLOBALS['eyeRemote_Window']->height = intval($params['arg'][1]);
	$GLOBALS['eyeRemote_Iframe']->setHeight($GLOBALS['eyeRemote_Window']->height - 24);
	$GLOBALS['eyeRemote_Iframe']->setWidth($GLOBALS['eyeRemote_Window']->width - 3);
}

?>
